# MIT License
# Copyright (c) 2020 pCYSl5EDgo

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

name: CreateNupkgTool

on:
  push:
    tags:
    - 'v*'

jobs:
  Create:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Build
      run: dotnet build -c Release
    - name: Test
      run: dotnet test
    - name: Push nupkg files
      run: |
        cd src/Annotation
        dotnet nuget push nupkg/*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json --skip-duplicate
        cd ../CommandLineInterface
        dotnet nuget push nupkg/*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json --skip-duplicate
        cd ../Core
        dotnet nuget push nupkg/*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json --skip-duplicate
      env:
        NUGET_API_KEY: ${{ secrets.nuget_api_key }}
    
    - name: Collect unitypackage files 2019.3
      run: |
        cd src/UnityEditorExtension
        echo "Assets/Plugins/MSPack.Processor/Core.meta" > metalist
        echo "Assets/Plugins/MSPack.Processor/Editor.meta" >> metalist
        find Assets/Plugins/MSPack.Processor/Core -name \*.meta >> metalist
        find Assets/Plugins/MSPack.Processor/Editor -name \*.meta >> metalist
    - name: Create unitypackage 2019.3
      uses: pCYSl5EDgo/create-unitypackage@master
      with:
        project-folder: 'src/UnityEditorExtension'
        package-path: 'src/Unity20184Project/Assets/Plugins/MSPack.Processor/Installer/MSPack.UnityEditor.2019.3.unitypackage'
        include-files: 'src/UnityEditorExtension/metalist'

    - name: Collect unitypackage files 2018.4
      run: |
        cd src/Unity20184Project
        echo "Assets/Plugins/MSPack.Processor/Core.meta" > metalist
        echo "Assets/Plugins/MSPack.Processor/Editor.meta" >> metalist
        find Assets/Plugins/MSPack.Processor/Core -name \*.meta >> metalist
        find Assets/Plugins/MSPack.Processor/Editor -name \*.meta >> metalist
    - name: Create unitypackage 2018.4
      uses: pCYSl5EDgo/create-unitypackage@master
      with:
        project-folder: 'src/Unity20184Project'
        package-path: 'src/Unity20184Project/Assets/Plugins/MSPack.Processor/Installer/MSPack.UnityEditor.2018.4.unitypackage'
        include-files: 'src/Unity20184Project/metalist'

    - name: Collect unitypackage files installer
      run: |
        cd src/Unity20184Project
        echo "Assets/Plugins/MSPack.Processor.meta" > metalist
        echo "Assets/Plugins/MSPack.Processor/LICENSE.meta" >> metalist
        echo "Assets/Plugins/MSPack.Processor/README-jp.md.meta" >> metalist
        echo "Assets/Plugins/MSPack.Processor/Installer.meta" >> metalist
        find Assets/Plugins/MSPack.Processor/Installer -name \*.meta >> metalist
    - name: Create unitypackage installer
      uses: pCYSl5EDgo/create-unitypackage@master
      with:
        project-folder: 'src/Unity20184Project'
        package-path: 'MSPack.UnityEditor.Installer.unitypackage'
        include-files: 'src/Unity20184Project/metalist'

    - name: Create Release
      id: create_release
      uses: actions/create-release@latest
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset installer
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: 'MSPack.UnityEditor.Installer.unitypackage'
        asset_name: 'MSPack.UnityEditor.Installer.unitypackage'
        asset_content_type: 'application/zip'
<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ output extension=".cs" #>
// Copyright (c) pCYSl5EDgo. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

using System;
using MessagePack;

namespace SimpleTestClasses
{
<#
var array = new []{
  "Byte",
  "SByte",
  "Int16",
  "Int32",
  "Int64",
  "UInt16",
  "UInt32",
  "UInt64",
  "Single",
  "Double",
  "Char",
  "Boolean",
};

foreach(var item in array)
{#>
  [MessagePackObject]
  public readonly struct SimpleType<#=item#> : IEquatable<SimpleType<#=item#>>
  {
    [Key(0)]
    private readonly <#=item#> value;

    [IgnoreMember]
    public <#=item#> Value => value;

    public SimpleType<#=item#>(<#=item#> value)
    {
      this.value = value;
    }

    public bool Equals(SimpleType<#=item#> other)
    {
      return this.value == other.value;
    }

    public override bool Equals(object obj) => obj is SimpleType<#=item#> other && this.Equals(other);

    public override int GetHashCode() => value.GetHashCode();
  }

<#}#>
}